import base64, codecs
magic = 'IyEvdXNyL2Jpbi9lbnYvcHl0aG9uCiMgLSotIGNvZGluZzogdXRmLTggLSotCmZyb20gX19mdXR1cmVfXyBpbXBvcnQgcHJpbnRfZnVuY3Rpb24KCnRyeToKICAgIGltcG9ydCBzbXRwbGliCmV4Y2VwdDoKICAgIHByaW50KCJ7IHNtdHBsaWIgbW9kdWxlIGlzIG1pc3NpbmcuIFRyeSBpbnN0YWxsaW5nIGl0IGFuZCB0cnkgYWdhaW4gfVxuIikKICAgIGV4aXQoLTEpCmltcG9ydCB0aW1lCmltcG9ydCBzeXMKCmZyb20gdXBkYXRlIGltcG9ydCAqCmZyb20gZW1haWwubWltZS5tdWx0aXBhcnQgaW1wb3J0IE1JTUVNdWx0aXBhcnQKZnJvbSBlbWFpbC5taW1lLnRleHQgaW1wb3J0IE1JTUVUZXh0CmZyb20gZ2V0cGFzcyBpbXBvcnQgZ2V0cGFzcwpmcm9tIHN0cmluZyBpbXBvcnQgVGVtcGxhdGUKZnJvbSB1cGRhdGUgaW1wb3J0ICoKZnJvbSBlbWFpbC5taW1lLmFwcGxpY2F0aW9uIGltcG9ydCBNSU1FQXBwbGljYXRpb24KZnJvbSBlbWFpbC5taW1lLmJhc2UgaW1wb3J0IE1JTUVCYXNlCmltcG9ydCBzb2NrZXQKZnJvbSBsaWNlbnNpbmcubW9kZWxzIGltcG9ydCoKZnJvbSBsaWNlbnNpbmcubWV0aG9kcyBpbXBvcnQgS2V5LCBIZWxwZXJzCgpSU0FQdWJLZXkgPSAiPFJTQUtleVZhbHVlPjxNb2R1bHVzPnFJekliQVdDcnZCK3dSME1ENDZDeWIwL3ZEWWUyQlNRSlNtc0RtNWRVT3ZsZURZZTdFZktDUXN0VTZtYW1Fd09tOThkSzE3Qy9ZcVhXUm5RSmFkMDE5TG9OZVUvek1xdithTEJ2Q2dUZlNUN3JPamtsL2J2dGtLUW5RMmk0NU02YTl4cVNZNlVHbU9kOTJORTZqajFQV2UrcnV3UDEvK3FMLzFZVUl0QXJtYTZmWS9DbmM4dXpTV2lrZUxyQWt5SW1hcXVLS0VuYTNHcUFza25tNWZJbDE0S01nTWRlQ0FJWlJZUG52dk9KMmQzK0tOemcvYlNRR0lldDNPWmc0OFd5L1FWWU5aUExyUU5QdzA5NnluUGVYSngyNDdNQTUyK2ZTeFVtWXJMb2FKSWhVUTdLSEl4SVo3TXV6UGdBd3FaRzBIU1VzcWxrM2ZJejdoY2xHS3FBUT09PC9Nb2R1bHVzPjxFeHBvbmVudD5BUUFCPC9FeHBvbmVudD48L1JTQUtleVZhbHVlPiIKYXV0aCA9ICJXeUl5TWpRMU5qRTRJaXdpYVROa2NHVlFia1Z6YTBkdVkzUXdXRGw0SzBwMlQzUmlValZyVEVaek1qQm1VbWwyTVhST1V5SmQiCgpkZWYgQXV0aEtleSgpOgogIGtleSA9IHN0cihpbnB1dCgiRW50ZXIgTGljZW5zZSBLRVk6ICIpKQogIHJlc3VsdCA9IEtleS5hY3RpdmF0ZSh0b2tlbj1hdXRoLAogICAgcnNhX3B1Yl9rZXk9UlNBUHViS2V5LAogICAgcHJvZHVjdF9pZD0xMTYxNCwKICAgIGtleT1rZXksCiAgICBtYWNoaW5lX2NvZGU9SGVscGVycy5HZXRNYWNoaW5lQ29kZSgpKQoKICBpZiByZXN1bHRbMF0gPT0gTm9uZSBvciBub3QgSGVscGVycy5Jc09uUmlnaHRNYWNoaW5lKHJlc3VsdFswXSk6CiAgICBwcmludCgiQW4gZXJyb3Igb2NjdXJlZDoge30iLmZvcm1hdChyZXN1bHRbMV0pKQoKICBpZiByZXN1bHRbMV0gPT0gTm9uZSBvciBub3QgSGVscGVycy5Jc09uUmlnaHRNYWNoaW5lKHJlc3VsdFswXSk6CiAgICBwcml'
love = 'hqPtvDJ4tMKWlo3Vto2AwqKWyMQbtr30vYzMipz1uqPulMKA1oUEoZI0cXDbXVPOyoUAyBtbtVPNtpUWcoaDbVxkcL2Ihp2HtIzSfnJDvXDbtVPNtoTywMJ5mMI9eMKxtCFOlMKA1oUEoZS0XVPNtVUOlnJ50XPWZnJAyoaAyVRI4pTylMKZ6VPVtXlOmqUVboTywMJ5mMI9eMKxhMKujnKWyplxcPtbXDKI0nRgyrFtcPtbaWlpXWPDxWPDxWPDxWPDxWPDxWPDxWPDxWPDxWPDxWPDxWPDxWPDxWPDxWPDxWPDxWPDxWPDxWPDxWPDxWPDxWPDxWPDxWPDxWPDxWPDxWPDxWPDxWNbxWPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPDxPvDxVSEbnKZtpUWinzIwqPO3LKZtq3WcqUEyovOzo3VtEHEID0SHFH9BVSOIHyOCH0HtG05ZJFO0olO1ozEypaA0LJ5xVUEbMFOGGIEDVPNtWPDXWPDtMaIhL3Eco25uoTy0rFOuplOjLKW0VT9zVUO5qTuiovOjpz9apzSgoJyhMl4tDJ55VTyfoTIaLJjtqKAyVT9zVUEbMFO0o29fVPNtVPNxWNbxWPOmqJAbVTSmVUAjLJ1gnJ5aVTymVUA0pzywqTk5VUOlo2ucLzy0MJDtq2y0nT91qPO0nTHtqKAypaZtL29hp2IhqP9eoz93oTIxM2HtVPDxPvDxVPNtVPNtVPNtVPNtVPNtVPNtVPNtVSAHDIxtH0STEFOOGxDtF0ISHPOQG0EWGxptVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtWPDXWPDtVPNtVPNtVPNuIRuSVRMIISIFEFOWHlOWGvOHFRHtFRSBESZtG0LtG1OSGvOGG1IFD0HtERIJEHkCHRIFHlRtVPNtVPNtVPNtVPNtVPNxWNbxWPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPDxPvDxVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtWPDXWPDtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtDaxtGT9wLJuVo3A0VPuZFPxtVPNxWNbxWPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPDxPvDxWPDxWPDxWPDxWPDxWPDxWPDxWPDxWPDxWPDxWPDxWPDxWPDxWPDxWPDxWPDxWPDxWPDxWPDxWPDxWPDxWPDxWPDxWPDxWPDxWPDxWPDxWPDXWlpaPaOlnJ50XPpaWjbXPvNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtK18XVPNtVPNtolNtVPNtVPNtVPNtVPNtVPNtYlptXDbtVPNtVPNtVPNtVPNtVPNtVPNtVPNtYlptVPNbVPOsKlNtVPNtVPNtVPNtVPNtVPNtVPNtVPNfPvNtVPOsKlNtVPNtVPNtVPNtVS9sYlptVPNtVPxtVPNtVPNtVPNtVPNtVPNtVPNtVPNtVPNhWlOtBjbtVPOiVPNtVPNtKl4gsa5+svptVPNtVPNtVPNtLTNgYF0hYy9sVPNtVPNtVPNtVPNtVP4aVPNtBjbtVPNtVS8hYF0aVPOvXFNtVPNtVPNtVPNtVPNtVPNtVPNtVPNtLTNgYF4hYy9sK18hWlNtVP'
god = '4nCiAgICAoICAgICBfLiAgICAgICkpLiAgICAgIGAtLl8gICAgICAgICAgICAgICAgICAgICA8ISEgIF9fCiAgICAgYFx8XHxcfFx8KS0uLi4uLl9fXy4tICAgICBgLS4gICAgICAgICBfXy4uLi0tJy0uJy4KICAgICAgIGAtLS0uLi4uLi5fX19fLi4uLS0tYC5fX18uJy0tLS0uLi4gLicgICAgICAgICBgLjsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGAtYCAgICBfXyAgICAgIGAKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFRlbGVncmFtIEBMSG9zdDI1CicnJykKdHJ5OgogICAgU0VSVkVSX01BSUwgPSBpbnB1dCgiXG4gPj4+RW50ZXIgeW91ciBzbXRwIGVtYWlsX2FkZHJlc3M6Ii5sb3dlcigpKQogICAgUEFTU1dPUkQgPSBnZXRwYXNzKCIgPj4+aW5wdXQgeW91ciBzbXRwX3Bhc3N3b3JkOiIpICAjICdZb3VyIHNlcnZlciBlbWFpbCBwYXNzd29yZCcKZXhjZXB0IE5hbWVFcnJvcjoKICAgIGlucHV0ID0gcmF3X2lucHV0ICAjIHB5dGhvbiAyCgoKZGVmIHNsb3dwcmludCh0aHJhc2hlcik6CiAgICBmb3IgbiBpbiB0aHJhc2hlciArICdcbic6CiAgICAgICAgc3lzLnN0ZG91dC53cml0ZShuKQogICAgICAgIHN5cy5zdGRvdXQuZmx1c2goKQogICAgICAgIHRpbWUuc2xlZXAoMTAuIC8gMTAwKQoKc2xvd3ByaW50KCJDaGVja2luZyB5b3VyIFNNVFAhIE5vdyB5b3UgY2FuIHRha2UgYSBzaXAgb2YgY29mZmVlIGFzIHdlIGF1dG9tYXRlIHlvdXIgbWFpbCBkZWxpdmVyeS4uLiAiKQp0aW1lLnNsZWVwKDEwKQoKCmRlZiBnZXRfY29udGFjdHMoZmlsZW5hbWUpOgogICAgIiIiCiAgICBSZXR1cm4gdHdvIGxpc3RzIG5hbWVzLCBlbWFpbHMgY29udGFpbmluZyBuYW1lcyBhbmQgZW1haWwgYWRkcmVzc2VzCiAgICByZWFkIGZyb20gYSBmaWxlIHNwZWNpZmllZCBieSBmaWxlbmFtZS4KICAgICIiIgoKICAgIG5hbWVzID0gW10KICAgIGVtYWlscyA9IFtdCiAgICB3aXRoIG9wZW4oZmlsZW5hbWUsIG1vZGU9J3InLCBlbmNvZGluZz0ndXRmLTgnKSBhcyBjb250YWN0c19maWxlOgogICAgICAgIGZvciBhX2NvbnRhY3QgaW4gY29udGFjdHNfZmlsZToKICAgICAgICAgICAgbmFtZXMuYXBwZW5kKGFfY29udGFjdC5zcGxpdCgpWzBdKQogICAgICAgICAgICBlbWFpbHMuYXBwZW5kKGFfY29udGFjdC5zcGxpdCgpWzFdKQogICAgcmV0dXJuIG5hbWVzLCBlbWFpbHMKCgpkZWYgcmVhZF90ZW1wbGF0ZShmaWxlbmFtZSk6CiAgICAiIiIKICAgIFJldHVybnMgYSBUZW1wbGF0ZSBvYmplY3QgY29tcHJpc2luZyB0aGUgY29udGVudHMgb2YgdGhlCiAgICBmaWxlIHNwZWNpZmllZCBieSBmaWxlbmFtZS4KICAgICIiIgoKICAgIHdpdGggb3BlbihmaWxlbmFtZSwgJ3InLCBlbmNvZGluZz0ndXRmLTgnKSBhcyB0ZW1wbGF0ZV9maWxlOgogICAgICAgIHRlbXBsYXRlX2ZpbGVfY29udGVudCA9IHRlbXBsYXRlX2ZpbGUucmVhZCgpCiAgICByZXR1cm4gVGVtcGxhdGUodGVtcGxhdGVfZmlsZV9jb250Z'
destiny = 'J50XDbXMTIzVT1unJ4bXGbXPvNtVPNvVvVtIR9RGmbtL29xMFOzqJ5wqTyiozSfnKE5VUEiVTkiq2IlVTSfoPOcoaO1qPOgLJyfplO0olOfo3qypzAup2HtWPO2LJkcMTS0MFVvVtbtVPNtozSgMKZfVTIgLJyfplN9VTqyqS9wo250LJA0pltaL29hqTSwqUZhqUu0WlxtVPZtpzIuMPOwo250LJA0pluyoJScoPOuozDtqKAypz5uoJHcPvNtVPOgMKAmLJqyK3EyoKOfLKEyVQ0tpzIuMS90MJ1joTS0MFtaoJImp2SaMKZhqUu0WlxtVPZtpzIuMPOgMKAmLJqyXUyiqKVtoJScoPOwo250MJ50XDbtVPNtp3IvnzIwqS90MJ1joTS0MFN9VUWyLJEsqTIgpTkuqTHbW3A1LzcyL3DhqUu0WlxtVPZtpzIuMPOgMKAmLJqyXUyiqKVtoJScoPOwo250MJ50XDbXVPNtVPZtFTyanTk5VTEyMzyhMFO5o3IlVSAAISNtp2IlqzIlVTuypzHXVPNtVUZhp3EupaE0oUZbXDbtVPNtpl5fo2qcovuGEIWJEIWsGHSWGPjtHRSGH1qCHxDcPtbtVPNtVlOTo3VtMJSwnPOwo250LJA0YPOmMJ5xVUEbMFOyoJScoQbXVPNtVTMipvOhLJ1yYPOyoJScoPOcovO6nKNbozSgMKZfVTIgLJyfplx6PvNtVPNtVPNtoKAaVQ0tGHyAEH11oUEcpTSlqPtcVPNwVTAlMJS0MFOuVT1yp3AuM2HXPvNtVPNtVPNtVlOuMTDtnJ4tqTuyVTSwqUIuoPOjMKWmo24tozSgMFO0olO0nTHtoJImp2SaMFO0MJ1joTS0MDbtVPNtVPNtVT1yp3AuM2HtCFOgMKAmLJqyK3EyoKOfLKEyYaA1LaA0nKE1qTHbHRIFH09BK05OGHH9ozSgMF50nKEfMFtcXDbXVPNtVPNtVPNwVTSxMPOcovO0nTHtLJA0qJSfVUOypaAiovOhLJ1yVUEiVUEbMFOmqJWdMJA0VUEyoKOfLKEyPvNtVPNtVPNtp3IvnzIwqPN9VUA1LzcyL3EsqTIgpTkuqTHhp3Ivp3EcqUI0MFuDEIWGG05sGxSAEG1hLJ1yYaEcqTkyXPxcPtbtVPNtVPNtVPZtHUWcoaEmVT91qPO0nTHtoJImp2SaMFOvo2E5VTMipvOiqKVtp2SeMFuho3DtozIwMKAmLKW5XDbtVPNtVPNtVUOlnJ50XTIgLJyfXDbXVPNtVPNtVPNwVUAyqUIjVUEbMFOjLKWuoJI0MKWmVT9zVUEbMFOgMKAmLJqyPvNtVPNtVPNtoKAaJlqTpz9gW10tCFOGEIWJEIWsGHSWGNbtVPNtVPNtVT1mM1faIT8aKFN9VTIgLJyfPvNtVPNtVPNtoKAaJlqGqJWdMJA0W10tCFOmqJWdMJA0PtbtVPNtVPNtVPZtLJExVTyhVUEbMFOgMKAmLJqyVTWiMUxXVPNtVPNtVPOgp2phLKE0LJAbXR1WGHIHMKu0XT1yp3AuM2HfVPqbqT1fWlxcPtbtVPNtVPNtVPZtp2IhMPO0nTHtoJImp2SaMFO2nJRtqTuyVUAypaMypvOmMKDtqKNtMJSloTyypv4XVPNtVPNtVPNvVvVtIR9RGmbtL29xMFOzqJ5wqTyiozSfnKE5VUEiVUAyozDtoJScoUZtLKDtLJ4tnJ50MKW2LJjtqT8tLKMinJDtpzIxVTMfLJqmVPDtoJIyqPOfnJ1cqUZvVvVXVPNtVPNtVPOmYaAyozEsoJImp2SaMFugp2pcPvNtVPNtVPNtMTIfVT1mMjbXVPNtVPZtplN9VUyiqKWsp2IlqzIlPvNtVPOmYaS1nKDbXDbtVPNtpUWcoaDbVxIgLJyfVUA1L2Ayp3AzqJkfrFOmMJ50YvVcPtbXnJLtK19hLJ1yK18tCG0tW19soJScoy9sWmbXVPNtVT1unJ4bXDb='
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))
